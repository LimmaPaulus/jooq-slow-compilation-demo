/*
 * This file is generated by jOOQ.
 */
package org.example.db.generated.tables.records


import org.example.db.generated.tables.FilmFormSubmit
import org.jooq.Field
import org.jooq.Record3
import org.jooq.Row3
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class FilmFormSubmitRecord() : TableRecordImpl<FilmFormSubmitRecord>(FilmFormSubmit.FILM_FORM_SUBMIT), Record3<Int?, String?, String?> {

    var filmId: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    var __MessageTitle__: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    var __MessageContent__: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row3<Int?, String?, String?> = super.fieldsRow() as Row3<Int?, String?, String?>
    override fun valuesRow(): Row3<Int?, String?, String?> = super.valuesRow() as Row3<Int?, String?, String?>
    override fun field1(): Field<Int?> = FilmFormSubmit.FILM_FORM_SUBMIT.FILM_ID
    override fun field2(): Field<String?> = FilmFormSubmit.FILM_FORM_SUBMIT.__MESSAGE_TITLE__
    override fun field3(): Field<String?> = FilmFormSubmit.FILM_FORM_SUBMIT.__MESSAGE_CONTENT__
    override fun component1(): Int? = filmId
    override fun component2(): String? = __MessageTitle__
    override fun component3(): String? = __MessageContent__
    override fun value1(): Int? = filmId
    override fun value2(): String? = __MessageTitle__
    override fun value3(): String? = __MessageContent__

    override fun value1(value: Int?): FilmFormSubmitRecord {
        this.filmId = value
        return this
    }

    override fun value2(value: String?): FilmFormSubmitRecord {
        this.__MessageTitle__ = value
        return this
    }

    override fun value3(value: String?): FilmFormSubmitRecord {
        this.__MessageContent__ = value
        return this
    }

    override fun values(value1: Int?, value2: String?, value3: String?): FilmFormSubmitRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        return this
    }

    /**
     * Create a detached, initialised FilmFormSubmitRecord
     */
    constructor(filmId: Int? = null, __MessageTitle__: String? = null, __MessageContent__: String? = null): this() {
        this.filmId = filmId
        this.__MessageTitle__ = __MessageTitle__
        this.__MessageContent__ = __MessageContent__
    }
}
