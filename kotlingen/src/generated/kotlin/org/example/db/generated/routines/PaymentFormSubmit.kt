/*
 * This file is generated by jOOQ.
 */
package org.example.db.generated.routines


import java.time.LocalDateTime
import java.time.LocalTime

import org.example.db.generated.Public
import org.jooq.Field
import org.jooq.Parameter
import org.jooq.impl.AbstractRoutine
import org.jooq.impl.Internal
import org.jooq.impl.SQLDataType


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class PaymentFormSubmit : AbstractRoutine<String>("payment_form_submit", Public.PUBLIC, SQLDataType.CLOB) {
    companion object {

        /**
         * The parameter <code>public.payment_form_submit.RETURN_VALUE</code>.
         */
        val RETURN_VALUE: Parameter<String?> = Internal.createParameter("RETURN_VALUE", SQLDataType.CLOB, false, false)

        /**
         * The parameter <code>public.payment_form_submit.p_is_new_row</code>.
         */
        val P_IS_NEW_ROW: Parameter<String?> = Internal.createParameter("p_is_new_row", SQLDataType.CLOB, false, false)

        /**
         * The parameter <code>public.payment_form_submit.p_id</code>.
         */
        val P_ID: Parameter<Int?> = Internal.createParameter("p_id", SQLDataType.INTEGER, false, false)

        /**
         * The parameter <code>public.payment_form_submit.p_payment_date</code>.
         */
        val P_PAYMENT_DATE: Parameter<LocalDateTime?> = Internal.createParameter("p_payment_date", SQLDataType.LOCALDATETIME(6), false, false)

        /**
         * The parameter <code>public.payment_form_submit.p_payment_time</code>.
         */
        val P_PAYMENT_TIME: Parameter<LocalTime?> = Internal.createParameter("p_payment_time", SQLDataType.LOCALTIME(6), false, false)
    }

    init {
        returnParameter = RETURN_VALUE
        addInParameter(P_IS_NEW_ROW)
        addInParameter(P_ID)
        addInParameter(P_PAYMENT_DATE)
        addInParameter(P_PAYMENT_TIME)
    }

    /**
     * Set the <code>p_is_new_row</code> parameter IN value to the routine
     */
    fun setPIsNewRow(value: String?): Unit = setValue(P_IS_NEW_ROW, value)

    /**
     * Set the <code>p_is_new_row</code> parameter to the function to be used
     * with a {@link org.jooq.Select} statement
     */
    fun setPIsNewRow(field: Field<String?>): Unit {
        setField(P_IS_NEW_ROW, field)
    }

    /**
     * Set the <code>p_id</code> parameter IN value to the routine
     */
    fun setPId(value: Int?): Unit = setValue(P_ID, value)

    /**
     * Set the <code>p_id</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    fun setPId(field: Field<Int?>): Unit {
        setField(P_ID, field)
    }

    /**
     * Set the <code>p_payment_date</code> parameter IN value to the routine
     */
    fun setPPaymentDate(value: LocalDateTime?): Unit = setValue(P_PAYMENT_DATE, value)

    /**
     * Set the <code>p_payment_date</code> parameter to the function to be used
     * with a {@link org.jooq.Select} statement
     */
    fun setPPaymentDate(field: Field<LocalDateTime?>): Unit {
        setField(P_PAYMENT_DATE, field)
    }

    /**
     * Set the <code>p_payment_time</code> parameter IN value to the routine
     */
    fun setPPaymentTime(value: LocalTime?): Unit = setValue(P_PAYMENT_TIME, value)

    /**
     * Set the <code>p_payment_time</code> parameter to the function to be used
     * with a {@link org.jooq.Select} statement
     */
    fun setPPaymentTime(field: Field<LocalTime?>): Unit {
        setField(P_PAYMENT_TIME, field)
    }
}
