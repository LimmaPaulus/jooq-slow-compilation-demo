/*
 * This file is generated by jOOQ.
 */
package org.example.db.generated.tables.records


import java.math.BigDecimal

import org.example.db.generated.enums.MpaaRating
import org.example.db.generated.tables.NicerButSlowerFilmList
import org.jooq.Field
import org.jooq.Record8
import org.jooq.Row8
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class NicerButSlowerFilmListRecord() : TableRecordImpl<NicerButSlowerFilmListRecord>(NicerButSlowerFilmList.NICER_BUT_SLOWER_FILM_LIST), Record8<Int?, String?, String?, String?, BigDecimal?, Short?, MpaaRating?, String?> {

    var fid: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    var title: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    var description: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    var category: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    var price: BigDecimal?
        set(value): Unit = set(4, value)
        get(): BigDecimal? = get(4) as BigDecimal?

    var length: Short?
        set(value): Unit = set(5, value)
        get(): Short? = get(5) as Short?

    var rating: MpaaRating?
        set(value): Unit = set(6, value)
        get(): MpaaRating? = get(6) as MpaaRating?

    var actors: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row8<Int?, String?, String?, String?, BigDecimal?, Short?, MpaaRating?, String?> = super.fieldsRow() as Row8<Int?, String?, String?, String?, BigDecimal?, Short?, MpaaRating?, String?>
    override fun valuesRow(): Row8<Int?, String?, String?, String?, BigDecimal?, Short?, MpaaRating?, String?> = super.valuesRow() as Row8<Int?, String?, String?, String?, BigDecimal?, Short?, MpaaRating?, String?>
    override fun field1(): Field<Int?> = NicerButSlowerFilmList.NICER_BUT_SLOWER_FILM_LIST.FID
    override fun field2(): Field<String?> = NicerButSlowerFilmList.NICER_BUT_SLOWER_FILM_LIST.TITLE
    override fun field3(): Field<String?> = NicerButSlowerFilmList.NICER_BUT_SLOWER_FILM_LIST.DESCRIPTION
    override fun field4(): Field<String?> = NicerButSlowerFilmList.NICER_BUT_SLOWER_FILM_LIST.CATEGORY
    override fun field5(): Field<BigDecimal?> = NicerButSlowerFilmList.NICER_BUT_SLOWER_FILM_LIST.PRICE
    override fun field6(): Field<Short?> = NicerButSlowerFilmList.NICER_BUT_SLOWER_FILM_LIST.LENGTH
    override fun field7(): Field<MpaaRating?> = NicerButSlowerFilmList.NICER_BUT_SLOWER_FILM_LIST.RATING
    override fun field8(): Field<String?> = NicerButSlowerFilmList.NICER_BUT_SLOWER_FILM_LIST.ACTORS
    override fun component1(): Int? = fid
    override fun component2(): String? = title
    override fun component3(): String? = description
    override fun component4(): String? = category
    override fun component5(): BigDecimal? = price
    override fun component6(): Short? = length
    override fun component7(): MpaaRating? = rating
    override fun component8(): String? = actors
    override fun value1(): Int? = fid
    override fun value2(): String? = title
    override fun value3(): String? = description
    override fun value4(): String? = category
    override fun value5(): BigDecimal? = price
    override fun value6(): Short? = length
    override fun value7(): MpaaRating? = rating
    override fun value8(): String? = actors

    override fun value1(value: Int?): NicerButSlowerFilmListRecord {
        this.fid = value
        return this
    }

    override fun value2(value: String?): NicerButSlowerFilmListRecord {
        this.title = value
        return this
    }

    override fun value3(value: String?): NicerButSlowerFilmListRecord {
        this.description = value
        return this
    }

    override fun value4(value: String?): NicerButSlowerFilmListRecord {
        this.category = value
        return this
    }

    override fun value5(value: BigDecimal?): NicerButSlowerFilmListRecord {
        this.price = value
        return this
    }

    override fun value6(value: Short?): NicerButSlowerFilmListRecord {
        this.length = value
        return this
    }

    override fun value7(value: MpaaRating?): NicerButSlowerFilmListRecord {
        this.rating = value
        return this
    }

    override fun value8(value: String?): NicerButSlowerFilmListRecord {
        this.actors = value
        return this
    }

    override fun values(value1: Int?, value2: String?, value3: String?, value4: String?, value5: BigDecimal?, value6: Short?, value7: MpaaRating?, value8: String?): NicerButSlowerFilmListRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        return this
    }

    /**
     * Create a detached, initialised NicerButSlowerFilmListRecord
     */
    constructor(fid: Int? = null, title: String? = null, description: String? = null, category: String? = null, price: BigDecimal? = null, length: Short? = null, rating: MpaaRating? = null, actors: String? = null): this() {
        this.fid = fid
        this.title = title
        this.description = description
        this.category = category
        this.price = price
        this.length = length
        this.rating = rating
        this.actors = actors
    }
}
