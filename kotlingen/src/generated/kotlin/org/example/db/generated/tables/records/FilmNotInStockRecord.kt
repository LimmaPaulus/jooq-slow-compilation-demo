/*
 * This file is generated by jOOQ.
 */
package org.example.db.generated.tables.records


import org.example.db.generated.tables.FilmNotInStock
import org.jooq.Field
import org.jooq.Record1
import org.jooq.Row1
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class FilmNotInStockRecord() : TableRecordImpl<FilmNotInStockRecord>(FilmNotInStock.FILM_NOT_IN_STOCK), Record1<Int?> {

    var pFilmCount: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    // -------------------------------------------------------------------------
    // Record1 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row1<Int?> = super.fieldsRow() as Row1<Int?>
    override fun valuesRow(): Row1<Int?> = super.valuesRow() as Row1<Int?>
    override fun field1(): Field<Int?> = FilmNotInStock.FILM_NOT_IN_STOCK.P_FILM_COUNT
    override fun component1(): Int? = pFilmCount
    override fun value1(): Int? = pFilmCount

    override fun value1(value: Int?): FilmNotInStockRecord {
        this.pFilmCount = value
        return this
    }

    override fun values(value1: Int?): FilmNotInStockRecord {
        this.value1(value1)
        return this
    }

    /**
     * Create a detached, initialised FilmNotInStockRecord
     */
    constructor(pFilmCount: Int? = null): this() {
        this.pFilmCount = pFilmCount
    }
}
