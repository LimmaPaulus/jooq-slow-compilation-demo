/*
 * This file is generated by jOOQ.
 */
package org.example.db.generated.tables.records


import java.time.LocalDateTime

import org.example.db.generated.tables.Staff
import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record11
import org.jooq.Row11
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class StaffRecord() : UpdatableRecordImpl<StaffRecord>(Staff.STAFF), Record11<Int?, String?, String?, Short?, String?, Short?, Boolean?, String?, String?, LocalDateTime?, ByteArray?> {

    var staffId: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    var firstName: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    var lastName: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    var addressId: Short?
        set(value): Unit = set(3, value)
        get(): Short? = get(3) as Short?

    var email: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    var storeId: Short?
        set(value): Unit = set(5, value)
        get(): Short? = get(5) as Short?

    var active: Boolean?
        set(value): Unit = set(6, value)
        get(): Boolean? = get(6) as Boolean?

    var username: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    var password: String?
        set(value): Unit = set(8, value)
        get(): String? = get(8) as String?

    var lastUpdate: LocalDateTime?
        set(value): Unit = set(9, value)
        get(): LocalDateTime? = get(9) as LocalDateTime?

    var picture: ByteArray?
        set(value): Unit = set(10, value)
        get(): ByteArray? = get(10) as ByteArray?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row11<Int?, String?, String?, Short?, String?, Short?, Boolean?, String?, String?, LocalDateTime?, ByteArray?> = super.fieldsRow() as Row11<Int?, String?, String?, Short?, String?, Short?, Boolean?, String?, String?, LocalDateTime?, ByteArray?>
    override fun valuesRow(): Row11<Int?, String?, String?, Short?, String?, Short?, Boolean?, String?, String?, LocalDateTime?, ByteArray?> = super.valuesRow() as Row11<Int?, String?, String?, Short?, String?, Short?, Boolean?, String?, String?, LocalDateTime?, ByteArray?>
    override fun field1(): Field<Int?> = Staff.STAFF.STAFF_ID
    override fun field2(): Field<String?> = Staff.STAFF.FIRST_NAME
    override fun field3(): Field<String?> = Staff.STAFF.LAST_NAME
    override fun field4(): Field<Short?> = Staff.STAFF.ADDRESS_ID
    override fun field5(): Field<String?> = Staff.STAFF.EMAIL
    override fun field6(): Field<Short?> = Staff.STAFF.STORE_ID
    override fun field7(): Field<Boolean?> = Staff.STAFF.ACTIVE
    override fun field8(): Field<String?> = Staff.STAFF.USERNAME
    override fun field9(): Field<String?> = Staff.STAFF.PASSWORD
    override fun field10(): Field<LocalDateTime?> = Staff.STAFF.LAST_UPDATE
    override fun field11(): Field<ByteArray?> = Staff.STAFF.PICTURE
    override fun component1(): Int? = staffId
    override fun component2(): String? = firstName
    override fun component3(): String? = lastName
    override fun component4(): Short? = addressId
    override fun component5(): String? = email
    override fun component6(): Short? = storeId
    override fun component7(): Boolean? = active
    override fun component8(): String? = username
    override fun component9(): String? = password
    override fun component10(): LocalDateTime? = lastUpdate
    override fun component11(): ByteArray? = picture
    override fun value1(): Int? = staffId
    override fun value2(): String? = firstName
    override fun value3(): String? = lastName
    override fun value4(): Short? = addressId
    override fun value5(): String? = email
    override fun value6(): Short? = storeId
    override fun value7(): Boolean? = active
    override fun value8(): String? = username
    override fun value9(): String? = password
    override fun value10(): LocalDateTime? = lastUpdate
    override fun value11(): ByteArray? = picture

    override fun value1(value: Int?): StaffRecord {
        this.staffId = value
        return this
    }

    override fun value2(value: String?): StaffRecord {
        this.firstName = value
        return this
    }

    override fun value3(value: String?): StaffRecord {
        this.lastName = value
        return this
    }

    override fun value4(value: Short?): StaffRecord {
        this.addressId = value
        return this
    }

    override fun value5(value: String?): StaffRecord {
        this.email = value
        return this
    }

    override fun value6(value: Short?): StaffRecord {
        this.storeId = value
        return this
    }

    override fun value7(value: Boolean?): StaffRecord {
        this.active = value
        return this
    }

    override fun value8(value: String?): StaffRecord {
        this.username = value
        return this
    }

    override fun value9(value: String?): StaffRecord {
        this.password = value
        return this
    }

    override fun value10(value: LocalDateTime?): StaffRecord {
        this.lastUpdate = value
        return this
    }

    override fun value11(value: ByteArray?): StaffRecord {
        this.picture = value
        return this
    }

    override fun values(value1: Int?, value2: String?, value3: String?, value4: Short?, value5: String?, value6: Short?, value7: Boolean?, value8: String?, value9: String?, value10: LocalDateTime?, value11: ByteArray?): StaffRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        this.value11(value11)
        return this
    }

    /**
     * Create a detached, initialised StaffRecord
     */
    constructor(staffId: Int? = null, firstName: String? = null, lastName: String? = null, addressId: Short? = null, email: String? = null, storeId: Short? = null, active: Boolean? = null, username: String? = null, password: String? = null, lastUpdate: LocalDateTime? = null, picture: ByteArray? = null): this() {
        this.staffId = staffId
        this.firstName = firstName
        this.lastName = lastName
        this.addressId = addressId
        this.email = email
        this.storeId = storeId
        this.active = active
        this.username = username
        this.password = password
        this.lastUpdate = lastUpdate
        this.picture = picture
    }
}
