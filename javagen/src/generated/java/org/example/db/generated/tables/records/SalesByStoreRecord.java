/*
 * This file is generated by jOOQ.
 */
package org.example.db.generated.tables.records;


import java.math.BigDecimal;

import org.example.db.generated.tables.SalesByStore;
import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SalesByStoreRecord extends TableRecordImpl<SalesByStoreRecord> implements Record3<String, String, BigDecimal> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.sales_by_store.store</code>.
     */
    public void setStore(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.sales_by_store.store</code>.
     */
    public String getStore() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.sales_by_store.manager</code>.
     */
    public void setManager(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.sales_by_store.manager</code>.
     */
    public String getManager() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.sales_by_store.total_sales</code>.
     */
    public void setTotalSales(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.sales_by_store.total_sales</code>.
     */
    public BigDecimal getTotalSales() {
        return (BigDecimal) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, BigDecimal> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, BigDecimal> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return SalesByStore.SALES_BY_STORE.STORE;
    }

    @Override
    public Field<String> field2() {
        return SalesByStore.SALES_BY_STORE.MANAGER;
    }

    @Override
    public Field<BigDecimal> field3() {
        return SalesByStore.SALES_BY_STORE.TOTAL_SALES;
    }

    @Override
    public String component1() {
        return getStore();
    }

    @Override
    public String component2() {
        return getManager();
    }

    @Override
    public BigDecimal component3() {
        return getTotalSales();
    }

    @Override
    public String value1() {
        return getStore();
    }

    @Override
    public String value2() {
        return getManager();
    }

    @Override
    public BigDecimal value3() {
        return getTotalSales();
    }

    @Override
    public SalesByStoreRecord value1(String value) {
        setStore(value);
        return this;
    }

    @Override
    public SalesByStoreRecord value2(String value) {
        setManager(value);
        return this;
    }

    @Override
    public SalesByStoreRecord value3(BigDecimal value) {
        setTotalSales(value);
        return this;
    }

    @Override
    public SalesByStoreRecord values(String value1, String value2, BigDecimal value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SalesByStoreRecord
     */
    public SalesByStoreRecord() {
        super(SalesByStore.SALES_BY_STORE);
    }

    /**
     * Create a detached, initialised SalesByStoreRecord
     */
    public SalesByStoreRecord(String store, String manager, BigDecimal totalSales) {
        super(SalesByStore.SALES_BY_STORE);

        setStore(store);
        setManager(manager);
        setTotalSales(totalSales);
    }
}
