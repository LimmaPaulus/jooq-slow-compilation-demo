/*
 * This file is generated by jOOQ.
 */
package org.example.db.generated.tables;


import org.example.db.generated.Public;
import org.example.db.generated.enums.MpaaRating;
import org.example.db.generated.tables.records.FilmFormSubmitRecord;
import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FilmFormSubmit extends TableImpl<FilmFormSubmitRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.film_form_submit</code>
     */
    public static final FilmFormSubmit FILM_FORM_SUBMIT = new FilmFormSubmit();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FilmFormSubmitRecord> getRecordType() {
        return FilmFormSubmitRecord.class;
    }

    /**
     * The column <code>public.film_form_submit.film_id</code>.
     */
    public final TableField<FilmFormSubmitRecord, Integer> FILM_ID = createField(DSL.name("film_id"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.film_form_submit.__MESSAGE_TITLE__</code>.
     */
    public final TableField<FilmFormSubmitRecord, String> __MESSAGE_TITLE__ = createField(DSL.name("__MESSAGE_TITLE__"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.film_form_submit.__MESSAGE_CONTENT__</code>.
     */
    public final TableField<FilmFormSubmitRecord, String> __MESSAGE_CONTENT__ = createField(DSL.name("__MESSAGE_CONTENT__"), SQLDataType.CLOB, this, "");

    private FilmFormSubmit(Name alias, Table<FilmFormSubmitRecord> aliased) {
        this(alias, aliased, new Field[] {
            DSL.val(null, SQLDataType.CLOB),
            DSL.val(null, SQLDataType.CLOB),
            DSL.val(null, SQLDataType.CLOB),
            DSL.val(null, SQLDataType.INTEGER),
            DSL.val(null, SQLDataType.INTEGER),
            DSL.val(null, SQLDataType.VARCHAR.asEnumDataType(org.example.db.generated.enums.MpaaRating.class)),
            DSL.val(null, SQLDataType.DOUBLE),
            DSL.val(null, SQLDataType.INTEGER)
        });
    }

    private FilmFormSubmit(Name alias, Table<FilmFormSubmitRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.function());
    }

    /**
     * Create an aliased <code>public.film_form_submit</code> table reference
     */
    public FilmFormSubmit(String alias) {
        this(DSL.name(alias), FILM_FORM_SUBMIT);
    }

    /**
     * Create an aliased <code>public.film_form_submit</code> table reference
     */
    public FilmFormSubmit(Name alias) {
        this(alias, FILM_FORM_SUBMIT);
    }

    /**
     * Create a <code>public.film_form_submit</code> table reference
     */
    public FilmFormSubmit() {
        this(DSL.name("film_form_submit"), null);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public FilmFormSubmit as(String alias) {
        return new FilmFormSubmit(DSL.name(alias), this, parameters);
    }

    @Override
    public FilmFormSubmit as(Name alias) {
        return new FilmFormSubmit(alias, this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public FilmFormSubmit rename(String name) {
        return new FilmFormSubmit(DSL.name(name), null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public FilmFormSubmit rename(Name name) {
        return new FilmFormSubmit(name, null, parameters);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * Call this table-valued function
     */
    public FilmFormSubmit call(
          String pIsNewRow
        , String pTitle
        , String pDescription
        , Integer pLanguageId
        , Integer pReleaseYear
        , MpaaRating pRating
        , Double pRentalRate
        , Integer pId
    ) {
        FilmFormSubmit result = new FilmFormSubmit(DSL.name("film_form_submit"), null, new Field[] {
            DSL.val(pIsNewRow, SQLDataType.CLOB),
            DSL.val(pTitle, SQLDataType.CLOB),
            DSL.val(pDescription, SQLDataType.CLOB),
            DSL.val(pLanguageId, SQLDataType.INTEGER),
            DSL.val(pReleaseYear, SQLDataType.INTEGER),
            DSL.val(pRating, SQLDataType.VARCHAR.asEnumDataType(org.example.db.generated.enums.MpaaRating.class)),
            DSL.val(pRentalRate, SQLDataType.DOUBLE),
            DSL.val(pId, SQLDataType.INTEGER)
        });

        return aliased() ? result.as(getUnqualifiedName()) : result;
    }

    /**
     * Call this table-valued function
     */
    public FilmFormSubmit call(
          Field<String> pIsNewRow
        , Field<String> pTitle
        , Field<String> pDescription
        , Field<Integer> pLanguageId
        , Field<Integer> pReleaseYear
        , Field<MpaaRating> pRating
        , Field<Double> pRentalRate
        , Field<Integer> pId
    ) {
        FilmFormSubmit result = new FilmFormSubmit(DSL.name("film_form_submit"), null, new Field[] {
            pIsNewRow,
            pTitle,
            pDescription,
            pLanguageId,
            pReleaseYear,
            pRating,
            pRentalRate,
            pId
        });

        return aliased() ? result.as(getUnqualifiedName()) : result;
    }
}
